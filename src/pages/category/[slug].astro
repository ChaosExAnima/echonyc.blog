---
import type { GetStaticPaths, InferGetStaticPropsType } from 'astro';

import { type CollectionEntry } from 'astro:content';

import Headline from '~/components/Headline.astro';
import PostList from '~/components/PostList.astro';
import BaseLayout from '~/layouts/BaseLayout.astro';
import { getPosts } from '~/lib/posts';

type Props = InferGetStaticPropsType<typeof getStaticPaths>;

export const getStaticPaths = (async () => {
	const posts = await getPosts();

	const categoryPosts: Record<string, CollectionEntry<'blog'>[]> = {};
	for (const post of posts) {
		for (const category of post.data.categories ?? []) {
			categoryPosts[category] = (categoryPosts[category] ?? []).concat(
				post,
			);
		}
	}
	return Object.entries(categoryPosts).map(([category, posts]) => ({
		params: { slug: category.replaceAll(' ', '-') },
		props: { category, posts },
	}));
}) satisfies GetStaticPaths;

const { category, posts } = Astro.props;
---

<BaseLayout aria-labelledby="title">
	<Headline class="my-10" id="title">
		Posts filed as:
		<strong class="font-normal capitalize">
			{category}
		</strong>
	</Headline>
	<PostList posts={posts} />
</BaseLayout>
